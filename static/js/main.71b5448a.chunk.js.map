{"version":3,"sources":["utils.js","components/home-page/Favorites.js","components/home-page/home.js","components/search-page/ImageResults.js","components/search-page/NavButtons.js","components/search-page/SearchBar.js","components/search-page/Search.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["formatBytes","bytes","megaBytes","marker","toFixed","Favorites","displayImages","handleAddToFavs","map","image","className","id","user","imageSize","IconButton","size","onClick","fontSize","style","fill","src","largeImageURL","alt","tags","width","height","Home","favoriteList","history","useHistory","length","push","ImageResults","images","currentFavoriteList","Button","variant","color","find","NavButtons","currPage","changePage","resultImages","disabled","SearchBar","onTextChange","search","moveToHomePage","TextField","onChange","label","placeholder","onKeyUp","code","Search","useState","searchText","setSearchText","setResultImages","isSearched","setIsSearched","page","setPage","handleSearch","a","axios","get","res","data","hits","console","log","useEffect","value","target","diff","App","JSON","parse","localStorage","getItem","favoriteImages","setFavoriteImages","newFavoriteImages","filter","setItem","stringify","saveFavoritesToStorage","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b5448a.chunk.js","sourcesContent":["export const formatBytes = (bytes) => {\r\n\tconst marker = 1024;\r\n\tconst decimal = 1;\r\n\tconst kiloBytes = marker;\r\n\tconst megaBytes = marker * marker;\r\n\tconst gigaBytes = marker * marker * marker;\r\n\r\n\tif (bytes < kiloBytes) return bytes;\r\n\telse if (bytes < megaBytes) return (bytes / kiloBytes).toFixed(decimal) + 'K';\r\n\telse if (bytes < gigaBytes) return (bytes / megaBytes).toFixed(decimal) + 'M';\r\n};\r\n\r\nexport const getStoragedFavorites = () => JSON.parse(localStorage.getItem('favoriteImages')) || [];\r\n\r\nexport const saveFavoritesToStorage = (newFavoriteImages) =>\r\n\tlocalStorage.setItem('favoriteImages', JSON.stringify(newFavoriteImages));\r\n","import { IconButton } from '@mui/material';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { formatBytes } from '../../utils';\r\n\r\nconst Favorites = ({ displayImages, handleAddToFavs }) => {\r\n\treturn displayImages.map((image) => {\r\n\t\treturn (\r\n\t\t\t<div key={image.id} className=\"image-container\">\r\n\t\t\t\t<div id={image.id} className=\"image-text-container\">\r\n\t\t\t\t\t<h5 className=\"image-info\">Owner: {image.user}</h5>\r\n\t\t\t\t\t<h5 id='imageSize' className=\"image-info\">\r\n\t\t\t\t\t\tImage size: {formatBytes(image.imageSize)}\r\n\t\t\t\t\t</h5>\r\n\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\taria-label=\"delete\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={() => handleAddToFavs(image)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteIcon fontSize=\"small\" style={{ fill: '#e34231' }} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"image\"\r\n\t\t\t\t\tsrc={image.largeImageURL}\r\n\t\t\t\t\talt={image.tags}\r\n\t\t\t\t\twidth=\"150px\"\r\n\t\t\t\t\theight=\"99px\"\r\n\t\t\t\t\tid={image.id}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n};\r\n\r\nexport default Favorites;\r\n","import Favorites from './Favorites';\r\nimport './home.scss';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Home = ({ favoriteList, handleAddToFavs }) => {\r\n\tconst history = useHistory();\r\n\treturn (\r\n\t\t<div className=\"home-container\">\r\n\t\t\t{favoriteList.length > 0 && <Favorites displayImages={favoriteList} handleAddToFavs={handleAddToFavs} />}\r\n\t\t\t<button className=\"search-link\" onClick={() => history.push('/search')}>\r\n\t\t\t\tAdd image\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { Button } from '@mui/material';\r\n\r\nconst ImageResults = ({ images, handleAddToFavs, currentFavoriteList }) => {\r\n\treturn (\r\n\t\t<div className=\"image-results-container\">\r\n\t\t\t{images.map((image) => (\r\n\t\t\t\t<div id={image.id} key={image.id} className=\"image-container\">\r\n\t\t\t\t\t<div className=\"image-text-container\">\r\n\t\t\t\t\t\t<Button\r\n            id='addOrRemoveButton'\r\n\t\t\t\t\t\t\tclassName=\"addOrRemove-button\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\tonClick={() => handleAddToFavs(image)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{currentFavoriteList.find(({ id }) => id === image.id) ? 'Remove' : 'Add'}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"image\"\r\n\t\t\t\t\t\tsrc={image.largeImageURL}\r\n\t\t\t\t\t\talt={image.tags}\r\n\t\t\t\t\t\twidth=\"150px\"\r\n\t\t\t\t\t\theight=\"99px\"\r\n\t\t\t\t\t\tid={image.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageResults;\r\n","import { Button } from \"@mui/material\";\n\nconst NavButtons = ({ currPage, changePage, resultImages }) => {\n  return (\n    <div className={\"nav-buttons-container\"}>\n      <div className=\"grow\">\n        <Button\n          className=\"next-button\"\n          disabled={currPage <= 1}\n          onClick={() => {\n            changePage(-1);\n          }}\n        >\n          Previous page\n        </Button>\n      </div>\n\n      {resultImages?.length === 30 && (\n        <div className=\"next-button-container\">\n          <Button\n            className=\"next-button\"\n            disabled={resultImages?.length !== 30}\n            onClick={() => {\n              changePage(1);\n            }}\n          >\n            Next page\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NavButtons;\n","import { Button, TextField } from \"@mui/material\";\n\nconst SearchBar = ({ onTextChange, search, moveToHomePage }) => (\n  <div className=\"search-keys-container\">\n    <TextField\n      className=\"text-field\"\n      onChange={onTextChange}\n      label=\"Search\"\n      placeholder={\"Enter search image text\"}\n      variant=\"standard\"\n      onKeyUp={({ code }) => {\n        if (code === \"Enter\") {\n          search();\n        }\n      }}\n    />\n    <Button className=\"search-button\" onClick={search} variant=\"contained\">\n      Search\n    </Button>\n    <Button className=\"back-button\" variant=\"outlined\" onClick={moveToHomePage}>\n      Back\n    </Button>\n  </div>\n);\n\nexport default SearchBar;\n","import './search.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ImageResults from './ImageResults';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { API_KEY, API_URL, IMG_LIMIT } from '../../constants';\r\nimport NavButtons from './NavButtons';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst Search = ({ handleAddToFavs, favoriteList }) => {\r\n\tconst history = useHistory();\r\n\tconst [searchText, setSearchText] = useState('');\r\n\tconst [resultImages, setResultImages] = useState([]);\r\n\tconst [isSearched, setIsSearched] = useState(false);\r\n\tconst [page, setPage] = useState(1);\r\n\r\n\tconst onTextChange = ({ target: { value } }) => {\r\n\t\tsetSearchText(value);\r\n\t};\r\n\r\n\tconst handleSearch = async () => {\r\n\t\tif (searchText === '') {\r\n\t\t\tsetResultImages([]);\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.get(\r\n\t\t\t\t\t`${API_URL}/?key=${API_KEY}&q=${searchText}&image_type=photo&per_page=${IMG_LIMIT}&page=${page}&safesearch=true`\r\n\t\t\t\t);\r\n\t\t\t\tsetResultImages(res.data.hits);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsSearched(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (searchText) {\r\n\t\t\t\thandleSearch();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[page]\r\n\t);\r\n\r\n\tconst changePage = (diff) => {\r\n\t\tsetPage((page) => page + diff);\r\n\t};\r\n\r\n\tconst moveToHomePage = () => {\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\tconst search = () => {\r\n\t\tif (page === 1) {\r\n\t\t\thandleSearch();\r\n\t\t} else {\r\n\t\t\tsetPage(1);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"search-container\">\r\n\t\t\t<SearchBar onTextChange={onTextChange} search={search} moveToHomePage={moveToHomePage} />\r\n\t\t\t<ImageResults images={resultImages} handleAddToFavs={handleAddToFavs} currentFavoriteList={favoriteList} />\r\n\t\t\t{isSearched && resultImages.length === 0 ? (\r\n\t\t\t\t<h2>No Results</h2>\r\n\t\t\t) : (\r\n\t\t\t\tisSearched && <NavButtons currPage={page} changePage={changePage} resultImages={resultImages} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","export const IMG_LIMIT = 30;\r\nexport const API_URL = \"https://pixabay.com/api\";\r\nexport const API_KEY = \"23641822-956778db124c800e193674c0c\";\r\n","import './App.scss';\nimport Home from './components/home-page/home';\nimport Search from './components/search-page/Search';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useState } from 'react';\nimport { getStoragedFavorites, saveFavoritesToStorage } from './utils';\n\nfunction App() {\n\tconst [favoriteImages, setFavoriteImages] = useState(getStoragedFavorites());\n\n\tconst handleAddToFavs = (image) => {\n\t\tlet newFavoriteImages;\n\t\tif (favoriteImages.find(({ id }) => id === image.id)) {\n\t\t\tnewFavoriteImages = favoriteImages.filter(({ id }) => image.id !== id);\n\t\t} else {\n\t\t\tnewFavoriteImages = [...favoriteImages, image];\n\t\t}\n\t\tsetFavoriteImages(newFavoriteImages);\n\t\tsaveFavoritesToStorage(newFavoriteImages);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home favoriteList={favoriteImages} handleAddToFavs={handleAddToFavs} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/search\">\n\t\t\t\t\t\t<Search favoriteList={favoriteImages} handleAddToFavs={handleAddToFavs} />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n       <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}